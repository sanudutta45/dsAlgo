function minIslandSize(grid) {
  let visited = new Set()
  let minSize = Infinity

  for (let r = 0; r < grid.length; r++) {
    for (let c = 0; c < grid[0].length; c++) {
      let islandSize = explore(r, c, grid, visited)
      if (islandSize > 0 && islandSize < minSize) minSize = islandSize
    }
  }

  return minSize === Infinity ? 0 : minSize
}

function explore(r, c, grid, visited = new Set()) {
  let rowBound = r >= 0 && r < grid.length
  let colBound = c >= 0 && c < grid[0].length

  if (!rowBound || !colBound) return 0

  if (grid[r][c] === "W") return 0

  const pos = r + "," + c
  if (visited.has(pos)) return 0
  visited.add(pos)

  let size = 1

  size += explore(r - 1, c, grid, visited)
  size += explore(r + 1, c, grid, visited)
  size += explore(r, c - 1, grid, visited)
  size += explore(r, c + 1, grid, visited)

  return size
}

console.log(
  "MIN SIZE ISLAND",
  minIslandSize([
    ["W", "L", "W", "W", "L"],
    ["W", "L", "L", "W", "L"],
    ["W", "L", "W", "W", "L"],
    ["W", "W", "L", "L", "W"],
    ["W", "W", "W", "L", "W"],
  ])
)
