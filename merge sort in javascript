function merge(arr, low, high, mid) {
  const L = []
  const R = []
  
  let i = low
  let j = mid+1
  
  while(i <= mid) {
    L.push(arr[i])
    i++
  }
  
  while(j <= high) {
    R.push(arr[j])
    j++
  }
  
  i = 0
  j = 0
  let k = low
  
  const l1 = L.length
  const l2 = R.length
  
  while(i < l1 && j < l2) {
    if(L[i] < R[j]) {
      arr[k] = L[i]
      i++
    } else {
      arr[k] =R[j]
      j++
    }
    k++
  }
  
  while(i < l1) {
    arr[k] = L[i]
    i++
    k++
  }
  
  while(j < l2) {
    arr[k] = R[j]
    j++
    k++
  }
}

function mergeSort(arr, low, high) {
  
  if(low >= high) return
  
  const mid = low + Math.floor((high - low)/2)
  
  mergeSort(arr, low, mid)
  mergeSort(arr, mid+1, high)
  merge(arr, low, high, mid)
}

const arr = [2,6,4,5,9,1,3]
const len = arr.length
mergeSort(arr, 0, len-1)

console.log("MERGE SORT..... ",arr)
