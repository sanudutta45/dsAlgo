/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */

 function atMostK(nums, k) {
    let l = 0
    let freq = new Map()
    let count = 0

    for(let r=0; r<nums.length; r++) {
        freq.set(nums[r], (freq.get(nums[r]) || 0)+1)

        while(freq.size > k) {
            freq.set(nums[l], (freq.get(nums[l]) || 0)-1)
            if(freq.get(nums[l]) === 0) {
                freq.delete(nums[l])
            }
            l++
        }
        count += r - l + 1
    }
    return count
 }
var subarraysWithKDistinct = function(nums, k) {
    return atMostK(nums, k) - atMostK(nums, k-1)
};
