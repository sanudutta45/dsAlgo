function niceSubarray(arr, k) {
  let l = 0
  let count = 0
  let oddCount = 0

  for (let r = 0; r < arr.length; r++) {
    if (arr[r] % 2 === 1) {
      oddCount++
    }

    while (oddCount > k) {
      if (arr[l] % 2 === 1) {
        oddCount--
      }
      l++
    }

    count += r - l + 1
  }
  return count
}

function atMostK(nums, k) {
  return niceSubarray(nums, k) - niceSubarray(nums, k - 1)
}

console.log(atMostK([1, 1, 2, 1, 1], 3))
console.log(atMostK([2, 4, 6], 1))
console.log(atMostK([2, 2, 2, 1, 2, 2, 1, 2, 2, 2], 2))
console.log(atMostK([1, 1, 1, 1, 1], 1))
console.log(atMostK([1, 1, 1, 1, 1], 2))
console.log(atMostK([1, 1, 1, 1, 1], 3))
console.log(atMostK([1, 1, 1, 1, 1], 4))
console.log(atMostK([1, 1, 1, 1, 1], 5))
